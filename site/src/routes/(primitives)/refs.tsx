
// Do not modify
// Generated from "./scripts/update-site/build-pages"

import PrimitivePageMain from "~/components/Primitives/PrimitivePageMain";
import CopyPackages from "~/components/CopyPackage/CopyPackages";
import { NoHydration } from "solid-js/web";

/*@jsxRuntime automatic @jsxImportSource solid-js*/
import {useMDXComponents as _provideComponents} from "solid-mdx";
function _createMdxContent(props) {
  const _components = Object.assign({
    p: "p",
    h5: "h5",
    a: "a",
    ul: "ul",
    li: "li",
    code: "code",
    em: "em",
    h2: "h2",
    hr: "hr",
    h3: "h3",
    h4: "h4",
    pre: "pre",
    span: "span"
  }, _provideComponents(), props.components);
  if (!CopyPackages) _missingMdxReference("CopyPackages", true);
  return <><NoHydration><_components.p>{"Collection of primitives, components and directives that help managing references to JSX elements, keeping track of mounted/unmounted elements."}</_components.p>{"\n"}<_components.h5 id="primitives"><_components.a className="header-anchor" href="#primitives">{"#"}</_components.a>{"Primitives:"}</_components.h5>{"\n"}<_components.ul>{"\n"}<_components.li><_components.a href="#mergeRefs"><_components.code>{"mergeRefs"}</_components.code></_components.a>{" - Utility for using jsx refs both for local variables and providing it to the "}<_components.code>{"props.ref"}</_components.code>{" for component consumers."}</_components.li>{"\n"}<_components.li><_components.a href="#elements"><_components.code>{"elements"}</_components.code></_components.a>{" - Reactive signal that filters out non-element items from a signal array. "}<_components.em>{"(Can be used with "}<_components.code>{"children"}</_components.code>{" primitive)"}</_components.em></_components.li>{"\n"}<_components.li><_components.a href="#refs"><_components.code>{"refs"}</_components.code></_components.a>{" - Get signal references to Elements of the reactive input. Which were added, which were removed. "}<_components.em>{"(Can be used with "}<_components.code>{"children"}</_components.code>{" primitive)"}</_components.em></_components.li>{"\n"}<_components.li><_components.a href="#mapRemoved"><_components.code>{"mapRemoved"}</_components.code></_components.a>{" - Similar to Solid's "}<_components.code>{"mapArray"}</_components.code>{", but you map the elements that were removed from source array. Leting you keep them for longer."}</_components.li>{"\n"}<_components.li><_components.a href="#resolveElements"><_components.code>{"resolveElements"}</_components.code></_components.a>{" â€” Will resolve value to a flat list of HTML elements or a single element or "}<_components.code>{"null"}</_components.code>{"."}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h5 id="directive"><_components.a className="header-anchor" href="#directive">{"#"}</_components.a>{"Directive:"}</_components.h5>{"\n"}<_components.ul>{"\n"}<_components.li><_components.a href="#unmount"><_components.code>{"unmount"}</_components.code></_components.a>{" - A directive that calls handler when the element get's unmounted from DOM."}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h5 id="components"><_components.a className="header-anchor" href="#components">{"#"}</_components.a>{"Components:"}</_components.h5>{"\n"}<_components.ul>{"\n"}<_components.li><_components.a href="#children"><_components.code>{"<Children>"}</_components.code></_components.a>{" - Solid's "}<_components.code>{"children"}</_components.code>{" helper in component form. Access it's children elements by "}<_components.code>{"get"}</_components.code>{" property."}</_components.li>{"\n"}<_components.li><_components.a href="#refs-1"><_components.code>{"<Refs>"}</_components.code></_components.a>{" - Get up-to-date references of the multiple children elements."}</_components.li>{"\n"}<_components.li><_components.a href="#ref"><_components.code>{"<Ref>"}</_components.code></_components.a>{" - Get up-to-date reference to a single child element."}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h5 id="types"><_components.a className="header-anchor" href="#types">{"#"}</_components.a>{"Types:"}</_components.h5>{"\n"}<_components.ul>{"\n"}<_components.li><_components.a href="#RefProps"><_components.code>{"RefProps"}</_components.code></_components.a>{" - Component properties with types for "}<_components.code>{"ref"}</_components.code></_components.li>{"\n"}<_components.li><_components.a href="#ResolvedChildren"><_components.code>{"ResolvedChildren"}</_components.code></_components.a>{" - Type of resolved JSX elements provided by Solid's "}<_components.code>{"children"}</_components.code>{" helper."}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h5 id="vanilla-helpers"><_components.a className="header-anchor" href="#vanilla-helpers">{"#"}</_components.a>{"Vanilla helpers:"}</_components.h5>{"\n"}<_components.ul>{"\n"}<_components.li><_components.code>{"getChangedItems"}</_components.code>{" - Tells you which elements got added to the array, and which got removed"}</_components.li>{"\n"}<_components.li><_components.code>{"getAddedItems"}</_components.code>{" - Tells you elements got added to the array"}</_components.li>{"\n"}<_components.li><_components.code>{"getRemovedItems"}</_components.code>{" - Tells you which elements got removed from the array"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h2 id="installation"><_components.a className="header-anchor" href="#installation">{"#"}</_components.a>{"Installation"}</_components.h2>{"\n"}</NoHydration><CopyPackages packageName="@solid-primitives/refs" /><NoHydration>{"\n"}<_components.h2 id="primitives-1"><_components.a className="header-anchor" href="#primitives-1">{"#"}</_components.a>{"Primitives"}</_components.h2>{"\n"}<_components.hr />{"\n"}<_components.h3 id="mergerefs"><_components.a className="header-anchor" href="#mergerefs">{"#"}</_components.a><_components.code>{"mergeRefs"}</_components.code></_components.h3>{"\n"}<_components.p>{"Utility for using jsx refs both for local variables and providing it to the "}<_components.code>{"props.ref"}</_components.code>{" for component consumers."}</_components.p>{"\n"}<_components.h4 id="how-to-use-it"><_components.a className="header-anchor" href="#how-to-use-it">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-tsx"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { mergeRefs } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n\n"}<_components.span className="hljs-keyword">{"interface"}</_components.span>{" "}<_components.span className="hljs-title class_">{"ButtonProps"}</_components.span>{" {\n  ref?: "}<_components.span className="hljs-title class_">{"HTMLButtonElement"}</_components.span>{" | ("}<_components.span className="hljs-function">{"("}<_components.span className="hljs-params">{"el: HTMLButtonElement"}</_components.span>{") =>"}</_components.span>{" "}<_components.span className="hljs-built_in">{"void"}</_components.span>{");\n}\n\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" "}<_components.span className="hljs-title function_">{"Button"}</_components.span>{" = ("}<_components.span className="hljs-params">{"props: ButtonProps"}</_components.span>{") => {\n  "}<_components.span className="hljs-keyword">{"let"}</_components.span>{" ref!: "}<_components.span className="hljs-title class_">{"HTMLButtonElement"}</_components.span>{";\n  "}<_components.span className="hljs-title function_">{"onMount"}</_components.span>{"("}<_components.span className="hljs-function">{"() =>"}</_components.span>{" {\n    "}<_components.span className="hljs-comment">{"// use the local ref"}</_components.span>{"\n  });\n  "}<_components.span className="hljs-keyword">{"return"}</_components.span>{" "}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"button"}</_components.span>{" "}<_components.span className="hljs-attr">{"ref"}</_components.span>{"="}<_components.span className="hljs-string">{"{mergeRefs(el"}</_components.span>{" =>"}</_components.span>{" (ref = el), props.ref)} />"}</_components.span>{";\n};\n\n"}<_components.span className="hljs-comment">{"// in consumer's component:"}</_components.span>{"\n"}<_components.span className="hljs-keyword">{"let"}</_components.span>{" ref!: "}<_components.span className="hljs-title class_">{"HTMLButtonElement"}</_components.span>{";\n"}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"Button"}</_components.span>{" "}<_components.span className="hljs-attr">{"ref"}</_components.span>{"="}<_components.span className="hljs-string">{"{ref}"}</_components.span>{" />"}</_components.span></_components.span>{";\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="elements"><_components.a className="header-anchor" href="#elements">{"#"}</_components.a><_components.code>{"elements"}</_components.code></_components.h3>{"\n"}<_components.p>{"Reactive signal that filters out non-element items from a signal array. "}<_components.em>{"(Can be used with "}<_components.code>{"children"}</_components.code>{" primitive)"}</_components.em></_components.p>{"\n"}<_components.h4 id="how-to-use-it-1"><_components.a className="header-anchor" href="#how-to-use-it-1">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { elements } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" resolved = "}<_components.span className="hljs-title function_">{"children"}</_components.span>{"("}<_components.span className="hljs-function">{"() =>"}</_components.span>{" props."}<_components.span className="hljs-property">{"children"}</_components.span>{");\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" els = "}<_components.span className="hljs-title function_">{"elements"}</_components.span>{"(resolved);\n"}<_components.span className="hljs-title function_">{"els"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: Element[]"}</_components.span>{"\n\n"}<_components.span className="hljs-comment">{"// or narrow down the element type"}</_components.span>{"\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" divs = "}<_components.span className="hljs-title function_">{"elements"}</_components.span>{"(resolved, "}<_components.span className="hljs-title class_">{"HTMLDivElement"}</_components.span>{");\n"}<_components.span className="hljs-title function_">{"divs"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: HTMLDivElement[]"}</_components.span>{"\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="refs"><_components.a className="header-anchor" href="#refs">{"#"}</_components.a><_components.code>{"refs"}</_components.code></_components.h3>{"\n"}<_components.p>{"Get signal references to Elements of the reactive input. Which were added, which were removed. "}<_components.em>{"(Can be used with "}<_components.code>{"children"}</_components.code>{" primitive)"}</_components.em></_components.p>{"\n"}<_components.p>{"Used internally by "}<_components.a href="#%3CRefs%3E"><_components.code>{"<Refs>"}</_components.code></_components.a>{" component."}</_components.p>{"\n"}<_components.h4 id="how-to-use-it-2"><_components.a className="header-anchor" href="#how-to-use-it-2">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { refs } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" resolved = "}<_components.span className="hljs-title function_">{"children"}</_components.span>{"("}<_components.span className="hljs-function">{"() =>"}</_components.span>{" props."}<_components.span className="hljs-property">{"children"}</_components.span>{");\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" [els, added, removed] = "}<_components.span className="hljs-title function_">{"refs"}</_components.span>{"(resolved);\n"}<_components.span className="hljs-title function_">{"els"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: Element[]"}</_components.span>{"\n"}<_components.span className="hljs-title function_">{"added"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: Element[]"}</_components.span>{"\n"}<_components.span className="hljs-title function_">{"removed"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: Element[]"}</_components.span>{"\n\n"}<_components.span className="hljs-comment">{"// or narrow down the element type"}</_components.span>{"\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" [els, added, removed] = "}<_components.span className="hljs-title function_">{"refs"}</_components.span>{"(resolved, "}<_components.span className="hljs-title class_">{"HTMLDivElement"}</_components.span>{");\n"}<_components.span className="hljs-title function_">{"els"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: HTMLDivElement[]"}</_components.span>{"\n"}<_components.span className="hljs-title function_">{"added"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: HTMLDivElement[]"}</_components.span>{"\n"}<_components.span className="hljs-title function_">{"removed"}</_components.span>{"(); "}<_components.span className="hljs-comment">{"// T: HTMLDivElement[]"}</_components.span>{"\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="mapremoved"><_components.a className="header-anchor" href="#mapremoved">{"#"}</_components.a><_components.code>{"mapRemoved"}</_components.code></_components.h3>{"\n"}<_components.p>{"Reactively map removed items from a reactive signal array. If the mapping function return an element signal, this element will be placed in the array returned from primitive."}</_components.p>{"\n"}<_components.h4 id="how-to-use-it-3"><_components.a className="header-anchor" href="#how-to-use-it-3">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { mapRemoved } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" "}<_components.span className="hljs-title function_">{"MyComp"}</_components.span>{" = props => {\n  "}<_components.span className="hljs-keyword">{"const"}</_components.span>{" resolved = "}<_components.span className="hljs-title function_">{"children"}</_components.span>{"("}<_components.span className="hljs-function">{"() =>"}</_components.span>{" props."}<_components.span className="hljs-property">{"children"}</_components.span>{");\n\n  "}<_components.span className="hljs-keyword">{"const"}</_components.span>{" combined = "}<_components.span className="hljs-title function_">{"mapRemoved"}</_components.span>{"(resolved, "}<_components.span className="hljs-function">{"("}<_components.span className="hljs-params">{"ref, index"}</_components.span>{") =>"}</_components.span>{" {\n    "}<_components.span className="hljs-keyword">{"const"}</_components.span>{" [el, setEl] = "}<_components.span className="hljs-title function_">{"createSignal"}</_components.span>{"(ref);\n\n    "}<_components.span className="hljs-comment">{"// apply styles/animations to removed element"}</_components.span>{"\n    ref."}<_components.span className="hljs-property">{"style"}</_components.span>{"."}<_components.span className="hljs-property">{"filter"}</_components.span>{" = "}<_components.span className="hljs-string">{"\"grayscale(100%)\""}</_components.span>{";\n\n    "}<_components.span className="hljs-comment">{"// computations can be created inside the mapping fn"}</_components.span>{"\n    "}<_components.span className="hljs-title function_">{"createEffect"}</_components.span>{"("}<_components.span className="hljs-function">{"() =>"}</_components.span>{" {\n      "}<_components.span className="hljs-comment">{"// index is a signal"}</_components.span>{"\n      "}<_components.span className="hljs-title function_">{"index"}</_components.span>{"();\n    });\n\n    "}<_components.span className="hljs-keyword">{"const"}</_components.span>{" "}<_components.span className="hljs-title function_">{"remove"}</_components.span>{" = ("}<_components.span className="hljs-params" />{") => {\n      "}<_components.span className="hljs-comment">{"// ...later"}</_components.span>{"\n      "}<_components.span className="hljs-comment">{"// by setting returned signal to undefined"}</_components.span>{"\n      "}<_components.span className="hljs-comment">{"// element get's removed from combined array permanently"}</_components.span>{"\n      "}<_components.span className="hljs-title function_">{"setEl"}</_components.span>{"("}<_components.span className="hljs-literal">{"undefined"}</_components.span>{");\n    };\n\n    "}<_components.span className="hljs-comment">{"// you can return a signal with element to keep it in the combined array"}</_components.span>{"\n    "}<_components.span className="hljs-keyword">{"return"}</_components.span>{" el;\n  });\n\n  "}<_components.span className="hljs-keyword">{"return"}</_components.span>{" combined;\n};\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="resolveelements"><_components.a className="header-anchor" href="#resolveelements">{"#"}</_components.a><_components.code>{"resolveElements"}</_components.code></_components.h3>{"\n"}<_components.p>{"Similarly to "}<_components.code>{"children()"}</_components.code>{" helper from "}<_components.code>{"solid-js"}</_components.code>{" will resolve provided value to a flat list of HTML elements or a single element or "}<_components.code>{"null"}</_components.code>{". But doesn't create a computation."}</_components.p>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { resolveElements } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" "}<_components.span className="hljs-title class_">{"MyComponent"}</_components.span>{": "}<_components.span className="hljs-title class_">{"ParentComponent"}</_components.span>{" = "}<_components.span className="hljs-function"><_components.span className="hljs-params">{"props"}</_components.span>{" =>"}</_components.span>{" {\n  "}<_components.span className="hljs-title function_">{"createEffect"}</_components.span>{"("}<_components.span className="hljs-function">{"() =>"}</_components.span>{" {\n    "}<_components.span className="hljs-keyword">{"const"}</_components.span>{" resolved = "}<_components.span className="hljs-title function_">{"resolveElements"}</_components.span>{"(props."}<_components.span className="hljs-property">{"children"}</_components.span>{");\n    resolved; "}<_components.span className="hljs-comment">{"// T: HTMLElement | HTMLElement[] | null"}</_components.span>{"\n  });\n  "}<_components.span className="hljs-keyword">{"return"}</_components.span>{" "}<_components.span className="hljs-string">{"\"Don't access props.children here again â€” it'll create new dom nodes\""}</_components.span>{";\n};\n"}</_components.code></_components.pre>{"\n"}<_components.h2 id="directive-1"><_components.a className="header-anchor" href="#directive-1">{"#"}</_components.a>{"Directive"}</_components.h2>{"\n"}<_components.hr />{"\n"}<_components.h3 id="unmount"><_components.a className="header-anchor" href="#unmount">{"#"}</_components.a><_components.code>{"unmount"}</_components.code></_components.h3>{"\n"}<_components.p>{"A directive that calls handler when the element get's unmounted from DOM."}</_components.p>{"\n"}<_components.h4 id="import"><_components.a className="header-anchor" href="#import">{"#"}</_components.a>{"Import"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { unmount } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n"}<_components.span className="hljs-comment">{"// place it somewhere in the code to prevent it from being tree-shaken"}</_components.span>{"\nunmount;\n"}</_components.code></_components.pre>{"\n"}<_components.h4 id="how-to-use-it-4"><_components.a className="header-anchor" href="#how-to-use-it-4">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-tsx"><_components.span className="hljs-keyword">{"const"}</_components.span>{" [ref, setRef] = createSignal<"}<_components.span className="hljs-title class_">{"Element"}</_components.span>{" | "}<_components.span className="hljs-literal">{"undefined"}</_components.span>{">();\n\n"}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{" "}<_components.span className="hljs-attr">{"ref"}</_components.span>{"="}<_components.span className="hljs-string">{"{el"}</_components.span>{" =>"}</_components.span>{" setRef(el)} use:unmount={() => setRef(undefined)}>\n  Hello\n"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span></_components.span>{";\n"}</_components.code></_components.pre>{"\n"}<_components.h2 id="components-1"><_components.a className="header-anchor" href="#components-1">{"#"}</_components.a>{"Components"}</_components.h2>{"\n"}<_components.hr />{"\n"}<_components.h3 id="children"><_components.a className="header-anchor" href="#children">{"#"}</_components.a><_components.code>{"<Children>"}</_components.code></_components.h3>{"\n"}<_components.p>{"Solid's "}<_components.code>{"children"}</_components.code>{" helper in component form. Access it's children elements by "}<_components.code>{"get"}</_components.code>{" property."}</_components.p>{"\n"}<_components.h4 id="how-to-use-it-5"><_components.a className="header-anchor" href="#how-to-use-it-5">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-tsx"><_components.span className="hljs-keyword">{"import"}</_components.span>{" {"}<_components.span className="hljs-title class_">{"Children"}</_components.span>{", "}<_components.span className="hljs-title class_">{"ResolvedJSXElement"}</_components.span>{"} "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{"\n\n"}<_components.span className="hljs-comment">{"// typing as JSX.Element also works"}</_components.span>{"\n"}<_components.span className="hljs-keyword">{"const"}</_components.span>{" [children, setChildren] = createSignal<"}<_components.span className="hljs-title class_">{"ResolvedJSXElement"}</_components.span>{">([])\n\n<"}<_components.span className="hljs-title class_">{"Children"}</_components.span>{" get={setChildren}>\n   "}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span><_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span></_components.span>{"\n   ...\n</"}<_components.span className="hljs-title class_">{"Children"}</_components.span>{">\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="ref"><_components.a className="header-anchor" href="#ref">{"#"}</_components.a><_components.code>{"<Ref>"}</_components.code></_components.h3>{"\n"}<_components.p>{"Get up-to-date reference to a single child element."}</_components.p>{"\n"}<_components.h4 id="import-1"><_components.a className="header-anchor" href="#import-1">{"#"}</_components.a>{"Import"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { "}<_components.span className="hljs-title class_">{"Ref"}</_components.span>{" } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n"}</_components.code></_components.pre>{"\n"}<_components.h4 id="how-to-use-it-6"><_components.a className="header-anchor" href="#how-to-use-it-6">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.p><_components.code>{"<Ref>"}</_components.code>{" accepts these properties:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.code>{"ref"}</_components.code>{" - Getter of current element "}<_components.em>{"(or "}<_components.code>{"undefined"}</_components.code>{" if not mounted)"}</_components.em></_components.li>{"\n"}<_components.li><_components.code>{"onMount"}</_components.code>{" - handle the child element getting mounted to the dom"}</_components.li>{"\n"}<_components.li><_components.code>{"onUnmount"}</_components.code>{" - handle the child element getting unmounted from the dom"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.pre><_components.code className="hljs language-tsx"><_components.span className="hljs-keyword">{"const"}</_components.span>{" [ref, setRef] = createSignal<"}<_components.span className="hljs-title class_">{"Element"}</_components.span>{" | "}<_components.span className="hljs-literal">{"undefined"}</_components.span>{">();\n\n"}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"Ref"}</_components.span>{"\n  "}<_components.span className="hljs-attr">{"ref"}</_components.span>{"="}<_components.span className="hljs-string">{"{setRef}"}</_components.span>{"\n  "}<_components.span className="hljs-attr">{"onMount"}</_components.span>{"="}<_components.span className="hljs-string">{"{el"}</_components.span>{" =>"}</_components.span>{" console.log(\"Mounted\", el)}\n  onUnmount={el => console.log(\"Unmounted\", el)}\n>\n  "}<_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"Show"}</_components.span>{" "}<_components.span className="hljs-attr">{"when"}</_components.span>{"="}<_components.span className="hljs-string">{"{show()}"}</_components.span>{">"}</_components.span>{"\n    "}<_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"Hello"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"\n  "}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"Show"}</_components.span>{">"}</_components.span>{"\n"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"Ref"}</_components.span>{">"}</_components.span></_components.span>{";\n"}</_components.code></_components.pre>{"\n"}<_components.h5 id="providing-generic-element-type"><_components.a className="header-anchor" href="#providing-generic-element-type">{"#"}</_components.a>{"Providing generic Element type"}</_components.h5>{"\n"}<_components.pre><_components.code className="hljs language-tsx">{"<"}<_components.span className="hljs-title class_">{"Ref"}</_components.span>{"<"}<_components.span className="hljs-title class_">{"HTMLDivElement"}</_components.span>{">\n  ref={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"el"}</_components.span>{" =>"}</_components.span>{" {...}} "}<_components.span className="hljs-comment">{"// HTMLDivElement | undefined"}</_components.span>{"\n  onMount={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"el"}</_components.span>{" =>"}</_components.span>{" {...}} "}<_components.span className="hljs-comment">{"// HTMLDivElement"}</_components.span>{"\n  onUnmount={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"el"}</_components.span>{" =>"}</_components.span>{" {...}} "}<_components.span className="hljs-comment">{"// HTMLDivElement"}</_components.span>{"\n>\n  "}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"Hello"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span></_components.span>{"\n</"}<_components.span className="hljs-title class_">{"Ref"}</_components.span>{">\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="refs-1"><_components.a className="header-anchor" href="#refs-1">{"#"}</_components.a><_components.code>{"<Refs>"}</_components.code></_components.h3>{"\n"}<_components.p>{"Get up-to-date references of the multiple children elements."}</_components.p>{"\n"}<_components.h4 id="import-2"><_components.a className="header-anchor" href="#import-2">{"#"}</_components.a>{"Import"}</_components.h4>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"import"}</_components.span>{" { "}<_components.span className="hljs-title class_">{"Refs"}</_components.span>{" } "}<_components.span className="hljs-keyword">{"from"}</_components.span>{" "}<_components.span className="hljs-string">{"\"@solid-primitives/refs\""}</_components.span>{";\n"}</_components.code></_components.pre>{"\n"}<_components.h4 id="how-to-use-it-7"><_components.a className="header-anchor" href="#how-to-use-it-7">{"#"}</_components.a>{"How to use it"}</_components.h4>{"\n"}<_components.p><_components.code>{"<Refs>"}</_components.code>{" accepts these properties:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.code>{"refs"}</_components.code>{" - Getter of current array of elements"}</_components.li>{"\n"}<_components.li><_components.code>{"added"}</_components.code>{" - Getter of added elements since the last change"}</_components.li>{"\n"}<_components.li><_components.code>{"removed"}</_components.code>{" - Getter of removed elements since the last change"}</_components.li>{"\n"}<_components.li><_components.code>{"onChange"}</_components.code>{" - handle children changes"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.pre><_components.code className="hljs language-tsx"><_components.span className="hljs-keyword">{"const"}</_components.span>{" [refs, setRefs] = createSignal<"}<_components.span className="hljs-title class_">{"Element"}</_components.span>{"[]>([]);\n\n"}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"Refs"}</_components.span>{"\n  "}<_components.span className="hljs-attr">{"refs"}</_components.span>{"="}<_components.span className="hljs-string">{"{setRefs}"}</_components.span>{"\n  "}<_components.span className="hljs-attr">{"added"}</_components.span>{"="}<_components.span className="hljs-string">{"{els"}</_components.span>{" =>"}</_components.span>{" console.log(\"Added elements\", els)}\n  removed={els => console.log(\"Removed elements\", els)}\n  onChange={e => console.log(e)}\n>\n  "}<_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"For"}</_components.span>{" "}<_components.span className="hljs-attr">{"each"}</_components.span>{"="}<_components.span className="hljs-string">{"{my_list()}"}</_components.span>{">"}</_components.span>{"{item => "}<_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"{item}"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"}"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"For"}</_components.span>{">"}</_components.span>{"\n  "}<_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"Show"}</_components.span>{" "}<_components.span className="hljs-attr">{"when"}</_components.span>{"="}<_components.span className="hljs-string">{"{show()}"}</_components.span>{">"}</_components.span>{"\n    "}<_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"Hello"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"\n  "}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"Show"}</_components.span>{">"}</_components.span>{"\n"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"Refs"}</_components.span>{">"}</_components.span></_components.span>{";\n"}</_components.code></_components.pre>{"\n"}<_components.h5 id="providing-generic-element-type-1"><_components.a className="header-anchor" href="#providing-generic-element-type-1">{"#"}</_components.a>{"Providing generic Element type"}</_components.h5>{"\n"}<_components.pre><_components.code className="hljs language-tsx">{"<"}<_components.span className="hljs-title class_">{"Refs"}</_components.span>{"<"}<_components.span className="hljs-title class_">{"HTMLDivElement"}</_components.span>{">\n  refs={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"els"}</_components.span>{" =>"}</_components.span>{" {}} "}<_components.span className="hljs-comment">{"// HTMLDivElement[]"}</_components.span>{"\n  added={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"els"}</_components.span>{" =>"}</_components.span>{" {}} "}<_components.span className="hljs-comment">{"// HTMLDivElement[]"}</_components.span>{"\n  removed={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"els"}</_components.span>{" =>"}</_components.span>{" {}} "}<_components.span className="hljs-comment">{"// HTMLDivElement[]"}</_components.span>{"\n  "}<_components.span className="hljs-comment">{"// { refs: HTMLDivElement[]; added: HTMLDivElement[]; removed: HTMLDivElement[] }"}</_components.span>{"\n  onChange={"}<_components.span className="hljs-function"><_components.span className="hljs-params">{"e"}</_components.span>{" =>"}</_components.span>{" {}}\n>\n  "}<_components.span className="xml"><_components.span className="hljs-tag">{"<"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span>{"Hello"}<_components.span className="hljs-tag">{"</"}<_components.span className="hljs-name">{"div"}</_components.span>{">"}</_components.span></_components.span>{"\n</"}<_components.span className="hljs-title class_">{"Refs"}</_components.span>{">\n"}</_components.code></_components.pre>{"\n"}<_components.h4 id="demo"><_components.a className="header-anchor" href="#demo">{"#"}</_components.a>{"Demo"}</_components.h4>{"\n"}<_components.p><_components.a href="https://stackblitz.com/edit/solid-vite-unocss-bkbgap?file=index.tsx">{"https://stackblitz.com/edit/solid-vite-unocss-bkbgap?file=index.tsx"}</_components.a></_components.p>{"\n"}<_components.p>{"(run "}<_components.code>{"npm start"}</_components.code>{" in the terminal)"}</_components.p>{"\n"}<_components.h2 id="types-1"><_components.a className="header-anchor" href="#types-1">{"#"}</_components.a>{"Types"}</_components.h2>{"\n"}<_components.h3 id="refprops"><_components.a className="header-anchor" href="#refprops">{"#"}</_components.a><_components.code>{"RefProps"}</_components.code></_components.h3>{"\n"}<_components.p>{"Component properties with types for "}<_components.code>{"ref"}</_components.code></_components.p>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"interface"}</_components.span>{" "}<_components.span className="hljs-title class_">{"RefProps"}</_components.span>{"<T "}<_components.span className="hljs-keyword">{"extends"}</_components.span>{" "}<_components.span className="hljs-title class_">{"Element"}</_components.span>{"> {\n  ref?: T | ("}<_components.span className="hljs-function">{"("}<_components.span className="hljs-params">{"el: T"}</_components.span>{") =>"}</_components.span>{" "}<_components.span className="hljs-built_in">{"void"}</_components.span>{");\n}\n"}</_components.code></_components.pre>{"\n"}<_components.h3 id="resolvedchildren"><_components.a className="header-anchor" href="#resolvedchildren">{"#"}</_components.a><_components.code>{"ResolvedChildren"}</_components.code></_components.h3>{"\n"}<_components.p>{"Type of resolved JSX elements provided by Solid's "}<_components.code>{"children"}</_components.code>{" helper."}</_components.p>{"\n"}<_components.pre><_components.code className="hljs language-ts"><_components.span className="hljs-keyword">{"type"}</_components.span>{" "}<_components.span className="hljs-title class_">{"ResolvedChildren"}</_components.span>{" = "}<_components.span className="hljs-title class_">{"ResolvedJSXElement"}</_components.span>{" | "}<_components.span className="hljs-title class_">{"ResolvedJSXElement"}</_components.span>{"[];\n"}</_components.code></_components.pre>{"\n"}<_components.h2 id="changelog"><_components.a className="header-anchor" href="#changelog">{"#"}</_components.a>{"Changelog"}</_components.h2>{"\n"}<_components.p>{"See "}<_components.a href="./CHANGELOG.md">{"CHANGELOG.md"}</_components.a></_components.p></NoHydration></>;
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}

function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}


export default function Index () {
  return (
    <PrimitivePageMain packageName="@solid-primitives/refs" name="refs" stage={1} packageList={[{"name":"refs","gzipped":"3.92 KB","minified":"14.07 KB"}]} primitiveList={[{"name":"elements","gzipped":"1.93 KB","minified":"5.85 KB"},{"name":"refs","gzipped":"2.11 KB","minified":"6.48 KB"},{"name":"mapRemoved","gzipped":"2.99 KB","minified":"10.33 KB"},{"name":"Children","gzipped":"231 B","minified":"375 B"},{"name":"Refs","gzipped":"2.31 KB","minified":"7.2 KB"},{"name":"Ref","gzipped":"1.55 KB","minified":"4.55 KB"},{"name":"unmount","gzipped":"190 B","minified":"262 B"},{"name":"mergeRefs","gzipped":"207 B","minified":"295 B"}]}>
      <MDXContent/>
    </PrimitivePageMain>
  )
}
