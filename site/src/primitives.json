[{"name":"active-element","category":"Inputs","description":"A reactive document.activeElement. Check which element is currently focused.","primitives":["createActiveElement","createFocusSignal"]},{"name":"audio","category":"Display & Media","description":"Primitives to manage audio and single sounds.","primitives":["makeAudio","makeAudioPlayer","createAudio"]},{"name":"autofocus","category":"Inputs","description":"Primitives for autofocusing HTML elements","primitives":["autofocus","createAutofocus"]},{"name":"bounds","category":"Display & Media","description":"Primitives for tracking HTML element size and position on screen as it changes.","primitives":["createElementBounds"]},{"name":"broadcast-channel","category":"Browser APIs","description":"Primitives to manage Broadcast Channel API","primitives":["makeBroadcastChannel","createBroadcastChannel"]},{"name":"clipboard","category":"Browser APIs","description":"Primitives for reading and writing to clipboard.","primitives":["copyClipboard","writeClipboard","createClipboard"]},{"name":"connectivity","category":"Network","description":"A navigator.onLine signal.","primitives":["createConnectivitySignal"]},{"name":"context","category":"Utilities","description":"Primitives simplifying or extending the SolidJS Context API","primitives":["createContextProvider"]},{"name":"cursor","category":"Utilities","description":"Two simple primitives for setting cursor css property reactively.","primitives":["createElementCursor","createBodyCursor"]},{"name":"date","category":"Utilities","description":"Collection of reactive primitives and utility functions, providing easier ways to deal with dates in SolidJS","primitives":["createDate","createDateNow","createTimeDifference","createTimeDifferenceFromNow","createTimeAgo","createCountdown","createCountdownFromNow"]},{"name":"destructure","category":"Reactivity","description":"Primitives for destructuring reactive objects – like props or stores – or signals of them into a separate accessors updated individually.","primitives":["destructure"]},{"name":"devices","category":"Display & Media","description":"Primitive that enumerates media devices","primitives":["createDevices","createMicrophones","createSpeakers","createCameras","createAccelerometer","createGyroscope"]},{"name":"event-bus","category":"Utilities","description":"A collection of SolidJS primitives providing various features of a pubsub/event-emitter/event-bus.","primitives":["createEventBus","createEmitter","createEventHub","createEventStack"]},{"name":"event-dispatcher","category":"Utilities","description":"A primitive to dispatch component events.","primitives":["createEventDispatcher"]},{"name":"event-listener","category":"Browser APIs","description":"SolidJS Primitives to manage creating event listeners.","primitives":["createEventListener","createEventSignal","createEventListenerMap","WindowEventListener","DocumentEventListener"]},{"name":"event-props","category":"Browser APIs","description":"Primitive to manage events in a reactive way.","primitives":["createEventProps"]},{"name":"fetch","category":"Network","description":"Primitive that wraps fetch requests","primitives":["createFetch"]},{"name":"fullscreen","category":"Browser APIs","description":"Primitive that wraps the fullscreen API.","primitives":["createFullscreen"]},{"name":"geolocation","category":"Browser APIs","description":"Primitives to query geolocation and observe changes.","primitives":["createGeolocation","createGeolocationWatcher"]},{"name":"graphql","category":"Network","description":"Primitive that generates a client and reactive GraphQL queries","primitives":["createGraphQLClient"]},{"name":"i18n","category":"Utilities","description":"Primitive to create and use i18n primitives.","primitives":["createI18nContext","createChainedI18n"]},{"name":"idle","category":"Display & Media","description":"A primitive to observe the user's idle status and react to its changes.","primitives":["createIdleTimer"]},{"name":"immutable","category":"Utilities","description":"Functional programming helpers for making non-mutating changes to data. Keeping it immutable.","primitives":["shallowArrayCopy","shallowObjectCopy","shallowCopy","withArrayCopy","withObjectCopy","withCopy","add","substract","multiply","divide","power","clamp","update","omit","pick","get","split","merge","push","drop","dropRight","filterOut","filter","sort","map","slice","splice","fill","concat","remove","removeItems","flatten","sortBy","filterInstance","filterOutInstance"]},{"name":"input-mask","category":"Inputs","description":"input masking event primitive.","primitives":["createInputMask"]},{"name":"intersection-observer","category":"Display & Media","description":"Primitives to support using the intersection observer API.","primitives":["makeIntersectionObserver","createIntersectionObserver","createViewportObserver","createVisibilityObserver"]},{"name":"jsx-parser","category":"Utilities","description":"A primitive to tokenize your solid-components to enable custom parsing.","primitives":["createJSXParser","createToken","resolveTokens","isToken"]},{"name":"keyboard","category":"Inputs","description":"A library of reactive promitives helping handling user's keyboard input.","primitives":["useKeyDownList","useCurrentlyHeldKey","useKeyDownSequence","createKeyHold","createShortcut"]},{"name":"keyed","category":"Control Flow","description":"Control Flow primitives and components that require specifying explicit keys to identify or rerender elements.","primitives":["keyArray","Key","Entries"]},{"name":"map","category":"Utilities","description":"The Map & WeakMap data structures as a reactive signals.","primitives":["ReactiveMap","ReactiveWeakMap"]},{"name":"media","category":"Display & Media","description":"Primitives for media query and device features","primitives":["makeMediaQueryListener","createMediaQuery","createBreakpoints","usePrefersDark"]},{"name":"memo","category":"Reactivity","description":"Collection of custom memo primitives. They extend Solid's createMemo functionality while keeping the usage similar.","primitives":["createLatest","createWritableMemo","createLazyMemo","createAsyncMemo","createDebouncedMemo","createDebouncedMemoOn","createThrottledMemo","createPureReaction","createMemoCache","createReducer"]},{"name":"mouse","category":"Inputs","description":"A collection of Solid Primitives, that capture current mouse cursor position, and help to deal with common related usecases.","primitives":["createMousePosition","createPositionToElement"]},{"name":"mutation-observer","category":"Browser APIs","description":"Primitive providing the ability to watch for changes made to the DOM tree.","primitives":["createMutationObserver"]},{"name":"page-visibility","category":"Display & Media","description":"Primitive to track page visibility","primitives":["createPageVisibility"]},{"name":"pagination","category":"Utilities","description":"A primitive that creates all the reactive data to manage your pagination.","primitives":["createPagination","createInfiniteScroll"]},{"name":"permission","category":"Browser APIs","description":"Primitive that wraps permission queries","primitives":["createPermission"]},{"name":"platform","category":"Utilities","description":"A set of const boolean variables identifying device and browser type.","primitives":["isAndroid","isWindows","isMac","isIPhone","isIPad","isIPod","isIOS","isAppleDevice","isMobile","isFirefox","isOpera","isSafari","isIE","isChromium","isEdge","isChrome","isGecko","isBlink","isWebKit","isPresto","isTrident","isEdgeHTML"]},{"name":"pointer","category":"Inputs","description":"A collection of primitives, giving you a nicer API to handle pointer events in a reactive context.","primitives":["createPointerListeners","createPerPointerListeners","createPointerPosition","createPointerList"]},{"name":"promise","category":"Utilities","description":"Promised one-time watch for changes. Await a reactive condition.","primitives":["promiseTimeout","raceTimeout","until"]},{"name":"props","category":"Utilities","description":"Library of primitives focused around component props.","primitives":["combineProps","filterProps"]},{"name":"raf","category":"Animation","description":"Primitive that facilitates RAF functionality","primitives":["createRAF","targetFPS"]},{"name":"range","category":"Control Flow","description":"Control Flow Primitives for displaying given number or a number range of elements.","primitives":["repeat","mapRange","indexRange","Repeat","Range","IndexRange"]},{"name":"refs","category":"Control Flow","description":"Library of primitives, components and directives for SolidJS that help managing references to JSX elements.","primitives":["mergeRefs","resolveElements","resolveFirst","Ref","Refs"]},{"name":"resize-observer","category":"Display & Media","description":"Reactive primitives for observing resizing of HTML elements.","primitives":["createResizeObserver","createWindowSize","createElementSize"]},{"name":"rootless","category":"Reactivity","description":"A collection of helpers that aim to simplify using reactive primitives outside of reactive roots, and managing disposal of reactive roots.","primitives":["createSubRoot","createCallback","createDisposable","createSharedRoot"]},{"name":"scheduled","category":"Utilities","description":"Primitives for creating scheduled — throttled or debounced — callbacks.","primitives":["debounce","throttle","scheduleIdle","leading","createScheduled"]},{"name":"script-loader","category":"Utilities","description":"Primitive to load scripts dynamically","primitives":["createScriptLoader"]},{"name":"scroll","category":"Inputs","description":"Reactive primitives to react to element/window scrolling.","primitives":["createScrollPosition","useWindowScrollPosition"]},{"name":"selection","category":"Inputs","description":"selection primitive.","primitives":["createSelection"]},{"name":"set","category":"Utilities","description":"The Set & WeakSet data structures as a reactive signals.","primitives":["ReactiveSet","ReactiveWeakSet"]},{"name":"share","category":"Utilities","description":"Primitives to help with sharing content on social media and beyond.","primitives":["createSocialShare","createWebShare"]},{"name":"signal-builders","category":"Reactivity","description":"A collection of chainable and composable reactive signal calculations, aka Signal Builders.","primitives":["string","float","int","join","lowercase","uppercase","capitalize","substring","template","add","substract","multiply","divide","power","round","ceil","floor","clamp","push","drop","dropRight","filter","filterOut","sort","map","slice","splice","remove","removeItems","concat","flatten","filterInstance","filterOutInstance","omit","pick","get","merge","update"]},{"name":"storage","category":"Browser APIs","description":"Primitive that provides reactive wrappers for storage access","primitives":["createStorage","createCookieStorage","createAsyncStorage","createStorageSignal","createLocalStorage","createSessionStorage"]},{"name":"stream","category":"Network","description":"Primitive that gets a user media stream from microphone, camera or screen","primitives":["createStream","createAmplitudeStream","createMediaPermissionRequest","createAmplitudeFromStream","createScreen"]},{"name":"styles","category":"Display & Media","description":"Collection of reactive primitives focused on styles.","primitives":["createRemSize"]},{"name":"timer","category":"Browser APIs","description":"Primitives to manage timeout and interval","primitives":["makeTimer","createTimer","createTimeoutLoop","createPolled","createIntervalCounter"]},{"name":"transition-group","category":"Animation","description":"Reactive primitives for implementing transition effects in SolidJS","primitives":["createSwitchTransition","createListTransition"]},{"name":"trigger","category":"Reactivity","description":"A set of primitives based on Solid signals, used to trigger computations.","primitives":["createTrigger","createTriggerCache"]},{"name":"tween","category":"Animation","description":"Primitive that creates tween functions","primitives":["createTween"]},{"name":"upload","category":"Browser APIs","description":"Primitives for uploading files.","primitives":["createFileUploader","createDropzone"]},{"name":"workers","category":"Browser APIs","description":"Primitives that support creating Web Workers.","primitives":["createWorker","createWorkerPool","createSignaledWorker"]}]